/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// GetAssetsForUserResponseDataInnerAttributesInner
    /// </summary>
    [DataContract(Name = "GetAssetsForUserResponse_data_inner_attributes_inner")]
    public partial class GetAssetsForUserResponseDataInnerAttributesInner
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetAssetsForUserResponseDataInnerAttributesInner" /> class.
        /// </summary>
        /// <param name="displayType">displayType.</param>
        /// <param name="maxValue">maxValue.</param>
        /// <param name="rarity">rarity.</param>
        /// <param name="type">type.</param>
        /// <param name="value">value.</param>
        public GetAssetsForUserResponseDataInnerAttributesInner(string displayType = default(string), decimal? maxValue = default(decimal?), decimal? rarity = default(decimal?), string type = default(string), string value = default(string))
        {
            this.DisplayType = displayType;
            this.MaxValue = maxValue;
            this.Rarity = rarity;
            this.Type = type;
            this.Value = value;
        }

        /// <summary>
        /// Gets or Sets DisplayType
        /// </summary>
        [DataMember(Name = "displayType", EmitDefaultValue = true)]
        public string DisplayType { get; set; }

        /// <summary>
        /// Gets or Sets MaxValue
        /// </summary>
        [DataMember(Name = "maxValue", EmitDefaultValue = true)]
        public decimal? MaxValue { get; set; }

        /// <summary>
        /// Gets or Sets Rarity
        /// </summary>
        [DataMember(Name = "rarity", EmitDefaultValue = true)]
        public decimal? Rarity { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name = "value", EmitDefaultValue = true)]
        public string Value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetAssetsForUserResponseDataInnerAttributesInner {\n");
            sb.Append("  DisplayType: ").Append(DisplayType).Append("\n");
            sb.Append("  MaxValue: ").Append(MaxValue).Append("\n");
            sb.Append("  Rarity: ").Append(Rarity).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
