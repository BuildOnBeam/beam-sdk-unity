/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// CreateOnrampRequestInput
    /// </summary>
    [DataContract(Name = "CreateOnrampRequestInput")]
    [UnityEngine.Scripting.Preserve]
    public partial class CreateOnrampRequestInput
    {
        /// <summary>
        /// Defines Token
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TokenEnum
        {
            /// <summary>
            /// Enum BEAM for value: BEAM
            /// </summary>
            [EnumMember(Value = "BEAM")]
            BEAM = 1
        }


        /// <summary>
        /// Gets or Sets Token
        /// </summary>
        [DataMember(Name = "token", EmitDefaultValue = false)]
        [UnityEngine.Scripting.Preserve]
        public TokenEnum? Token { get; set; }
        /// <summary>
        /// Defines PaymentCurrency
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum PaymentCurrencyEnum
        {
            /// <summary>
            /// Enum USD for value: USD
            /// </summary>
            [EnumMember(Value = "USD")]
            USD = 1,

            /// <summary>
            /// Enum EUR for value: EUR
            /// </summary>
            [EnumMember(Value = "EUR")]
            EUR = 2
        }


        /// <summary>
        /// Gets or Sets PaymentCurrency
        /// </summary>
        [DataMember(Name = "paymentCurrency", EmitDefaultValue = false)]
        [UnityEngine.Scripting.Preserve]
        public PaymentCurrencyEnum? PaymentCurrency { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOnrampRequestInput" /> class.
        /// </summary>
        /// <param name="token">token (default to TokenEnum.BEAM).</param>
        /// <param name="tokenAmount">tokenAmount (default to &quot;100&quot;).</param>
        /// <param name="fiatAmount">fiatAmount.</param>
        /// <param name="paymentCurrency">paymentCurrency (default to PaymentCurrencyEnum.USD).</param>
        /// <param name="chainId">chainId (default to 13337).</param>
        [UnityEngine.Scripting.Preserve]
        public CreateOnrampRequestInput(TokenEnum? token = TokenEnum.BEAM, string tokenAmount = @"100", string fiatAmount = default(string), PaymentCurrencyEnum? paymentCurrency = PaymentCurrencyEnum.USD, long chainId = 13337)
        {
            this.Token = token;
            // use default value if no "tokenAmount" provided
            this.TokenAmount = tokenAmount ?? @"100";
            this.FiatAmount = fiatAmount;
            this.PaymentCurrency = paymentCurrency;
            this.ChainId = chainId;
        }

        /// <summary>
        /// Gets or Sets TokenAmount
        /// </summary>
        [DataMember(Name = "tokenAmount", EmitDefaultValue = false)]
        [UnityEngine.Scripting.Preserve]
        public string TokenAmount { get; set; }

        /// <summary>
        /// Gets or Sets FiatAmount
        /// </summary>
        [DataMember(Name = "fiatAmount", EmitDefaultValue = false)]
        [UnityEngine.Scripting.Preserve]
        public string FiatAmount { get; set; }

        /// <summary>
        /// Gets or Sets ChainId
        /// </summary>
        [DataMember(Name = "chainId", EmitDefaultValue = false)]
        [UnityEngine.Scripting.Preserve]
        public long ChainId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateOnrampRequestInput {\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  TokenAmount: ").Append(TokenAmount).Append("\n");
            sb.Append("  FiatAmount: ").Append(FiatAmount).Append("\n");
            sb.Append("  PaymentCurrency: ").Append(PaymentCurrency).Append("\n");
            sb.Append("  ChainId: ").Append(ChainId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
