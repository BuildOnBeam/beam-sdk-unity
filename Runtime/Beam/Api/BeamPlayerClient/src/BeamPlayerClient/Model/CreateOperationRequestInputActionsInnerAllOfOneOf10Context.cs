/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// CreateOperationRequestInputActionsInnerAllOfOneOf10Context
    /// </summary>
    [DataContract(Name = "CreateOperationRequestInput_actions_inner_allOf_oneOf_10_context")]
    [UnityEngine.Scripting.Preserve]
    public partial class CreateOperationRequestInputActionsInnerAllOfOneOf10Context
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOperationRequestInputActionsInnerAllOfOneOf10Context" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        [UnityEngine.Scripting.Preserve]
        protected CreateOperationRequestInputActionsInnerAllOfOneOf10Context() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOperationRequestInputActionsInnerAllOfOneOf10Context" /> class.
        /// </summary>
        /// <param name="input">input (required).</param>
        /// <param name="output">output (required).</param>
        [UnityEngine.Scripting.Preserve]
        public CreateOperationRequestInputActionsInnerAllOfOneOf10Context(CreateOperationRequestInputActionsInnerAllOfOneOf10ContextInput input = default(CreateOperationRequestInputActionsInnerAllOfOneOf10ContextInput), CreateOperationRequestInputActionsInnerAllOfOneOf10ContextInput output = default(CreateOperationRequestInputActionsInnerAllOfOneOf10ContextInput))
        {
            // to ensure "input" is required (not null)
            if (input == null)
            {
                throw new ArgumentNullException("input is a required property for CreateOperationRequestInputActionsInnerAllOfOneOf10Context and cannot be null");
            }
            this.Input = input;
            // to ensure "output" is required (not null)
            if (output == null)
            {
                throw new ArgumentNullException("output is a required property for CreateOperationRequestInputActionsInnerAllOfOneOf10Context and cannot be null");
            }
            this.Output = output;
        }

        /// <summary>
        /// Gets or Sets Input
        /// </summary>
        [DataMember(Name = "input", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CreateOperationRequestInputActionsInnerAllOfOneOf10ContextInput Input { get; set; }

        /// <summary>
        /// Gets or Sets Output
        /// </summary>
        [DataMember(Name = "output", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CreateOperationRequestInputActionsInnerAllOfOneOf10ContextInput Output { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateOperationRequestInputActionsInnerAllOfOneOf10Context {\n");
            sb.Append("  Input: ").Append(Input).Append("\n");
            sb.Append("  Output: ").Append(Output).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
