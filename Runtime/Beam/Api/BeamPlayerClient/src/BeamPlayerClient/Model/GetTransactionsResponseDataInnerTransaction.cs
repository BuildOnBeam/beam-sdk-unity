/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// The transaction object exists if you created the transaction deterministically and contains information about the on-chain transaction
    /// </summary>
    [DataContract(Name = "GetTransactionsResponse_data_inner_transaction")]
    public partial class GetTransactionsResponseDataInnerTransaction
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetTransactionsResponseDataInnerTransaction" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetTransactionsResponseDataInnerTransaction() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetTransactionsResponseDataInnerTransaction" /> class.
        /// </summary>
        /// <param name="createdAt">createdAt (required).</param>
        /// <param name="blockNumber">blockNumber.</param>
        /// <param name="hash">hash.</param>
        /// <param name="gasUsed">gasUsed.</param>
        /// <param name="gasFee">gasFee.</param>
        /// <param name="status">status.</param>
        /// <param name="logs">logs.</param>
        public GetTransactionsResponseDataInnerTransaction(Object createdAt = default(Object), decimal blockNumber = default(decimal), string hash = default(string), string gasUsed = default(string), string gasFee = default(string), decimal status = default(decimal), List<GetTransactionsResponseDataInnerTransactionLogsInner> logs = default(List<GetTransactionsResponseDataInnerTransactionLogsInner>))
        {
            // to ensure "createdAt" is required (not null)
            if (createdAt == null)
            {
                throw new ArgumentNullException("createdAt is a required property for GetTransactionsResponseDataInnerTransaction and cannot be null");
            }
            this.CreatedAt = createdAt;
            this.BlockNumber = blockNumber;
            this.Hash = hash;
            this.GasUsed = gasUsed;
            this.GasFee = gasFee;
            this.Status = status;
            this.Logs = logs;
        }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", IsRequired = true, EmitDefaultValue = true)]
        public Object CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets BlockNumber
        /// </summary>
        [DataMember(Name = "blockNumber", EmitDefaultValue = false)]
        public decimal BlockNumber { get; set; }

        /// <summary>
        /// Gets or Sets Hash
        /// </summary>
        [DataMember(Name = "hash", EmitDefaultValue = false)]
        public string Hash { get; set; }

        /// <summary>
        /// Gets or Sets GasUsed
        /// </summary>
        [DataMember(Name = "gasUsed", EmitDefaultValue = false)]
        public string GasUsed { get; set; }

        /// <summary>
        /// Gets or Sets GasFee
        /// </summary>
        [DataMember(Name = "gasFee", EmitDefaultValue = false)]
        public string GasFee { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public decimal Status { get; set; }

        /// <summary>
        /// Gets or Sets Logs
        /// </summary>
        [DataMember(Name = "logs", EmitDefaultValue = false)]
        public List<GetTransactionsResponseDataInnerTransactionLogsInner> Logs { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetTransactionsResponseDataInnerTransaction {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  BlockNumber: ").Append(BlockNumber).Append("\n");
            sb.Append("  Hash: ").Append(Hash).Append("\n");
            sb.Append("  GasUsed: ").Append(GasUsed).Append("\n");
            sb.Append("  GasFee: ").Append(GasFee).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  Logs: ").Append(Logs).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
