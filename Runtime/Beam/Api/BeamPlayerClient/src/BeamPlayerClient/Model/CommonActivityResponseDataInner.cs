/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// CommonActivityResponseDataInner
    /// </summary>
    [DataContract(Name = "CommonActivityResponse_data_inner")]
    [UnityEngine.Scripting.Preserve]
    public partial class CommonActivityResponseDataInner
    {
        /// <summary>
        /// Defines Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum Ask for value: ask
            /// </summary>
            [EnumMember(Value = "ask")]
            Ask = 1,

            /// <summary>
            /// Enum AskCancel for value: ask_cancel
            /// </summary>
            [EnumMember(Value = "ask_cancel")]
            AskCancel = 2,

            /// <summary>
            /// Enum Bid for value: bid
            /// </summary>
            [EnumMember(Value = "bid")]
            Bid = 3,

            /// <summary>
            /// Enum BidCancel for value: bid_cancel
            /// </summary>
            [EnumMember(Value = "bid_cancel")]
            BidCancel = 4,

            /// <summary>
            /// Enum Sale for value: sale
            /// </summary>
            [EnumMember(Value = "sale")]
            Sale = 5,

            /// <summary>
            /// Enum Mint for value: mint
            /// </summary>
            [EnumMember(Value = "mint")]
            Mint = 6,

            /// <summary>
            /// Enum Transfer for value: transfer
            /// </summary>
            [EnumMember(Value = "transfer")]
            Transfer = 7
        }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public TypeEnum? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonActivityResponseDataInner" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CommonActivityResponseDataInner() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CommonActivityResponseDataInner" /> class.
        /// </summary>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="contract">contract (required).</param>
        /// <param name="transaction">transaction (required).</param>
        /// <param name="asset">asset (required).</param>
        /// <param name="order">order.</param>
        /// <param name="type">type.</param>
        [UnityEngine.Scripting.Preserve]
        public CommonActivityResponseDataInner(string createdAt = default(string), CommonActivityResponseDataInnerContract contract = default(CommonActivityResponseDataInnerContract), CommonActivityResponseDataInnerTransaction transaction = default(CommonActivityResponseDataInnerTransaction), CommonActivityResponseDataInnerAsset asset = default(CommonActivityResponseDataInnerAsset), CommonActivityResponseDataInnerOrder order = default(CommonActivityResponseDataInnerOrder), TypeEnum? type = default(TypeEnum?))
        {
            // to ensure "contract" is required (not null)
            if (contract == null)
            {
                throw new ArgumentNullException("contract is a required property for CommonActivityResponseDataInner and cannot be null");
            }
            this.Contract = contract;
            // to ensure "transaction" is required (not null)
            if (transaction == null)
            {
                throw new ArgumentNullException("transaction is a required property for CommonActivityResponseDataInner and cannot be null");
            }
            this.Transaction = transaction;
            // to ensure "asset" is required (not null)
            if (asset == null)
            {
                throw new ArgumentNullException("asset is a required property for CommonActivityResponseDataInner and cannot be null");
            }
            this.Asset = asset;
            this.CreatedAt = createdAt;
            this.Order = order;
            this.Type = type;
        }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "createdAt", EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public string CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets Contract
        /// </summary>
        [DataMember(Name = "contract", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CommonActivityResponseDataInnerContract Contract { get; set; }

        /// <summary>
        /// Gets or Sets Transaction
        /// </summary>
        [DataMember(Name = "transaction", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CommonActivityResponseDataInnerTransaction Transaction { get; set; }

        /// <summary>
        /// Gets or Sets Asset
        /// </summary>
        [DataMember(Name = "asset", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CommonActivityResponseDataInnerAsset Asset { get; set; }

        /// <summary>
        /// Gets or Sets Order
        /// </summary>
        [DataMember(Name = "order", EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CommonActivityResponseDataInnerOrder Order { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CommonActivityResponseDataInner {\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  Contract: ").Append(Contract).Append("\n");
            sb.Append("  Transaction: ").Append(Transaction).Append("\n");
            sb.Append("  Asset: ").Append(Asset).Append("\n");
            sb.Append("  Order: ").Append(Order).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
