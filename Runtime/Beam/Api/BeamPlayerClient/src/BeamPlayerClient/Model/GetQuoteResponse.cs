/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// GetQuoteResponse
    /// </summary>
    [DataContract(Name = "GetQuoteResponse")]
    [UnityEngine.Scripting.Preserve]
    public partial class GetQuoteResponse
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetQuoteResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetQuoteResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetQuoteResponse" /> class.
        /// </summary>
        /// <param name="tokenIn">tokenIn (required).</param>
        /// <param name="tokenOut">tokenOut (required).</param>
        /// <param name="amountIn">amountIn (required).</param>
        /// <param name="amountOut">amountOut (required).</param>
        [UnityEngine.Scripting.Preserve]
        public GetQuoteResponse(string tokenIn = default(string), string tokenOut = default(string), string amountIn = default(string), string amountOut = default(string))
        {
            // to ensure "tokenIn" is required (not null)
            if (tokenIn == null)
            {
                throw new ArgumentNullException("tokenIn is a required property for GetQuoteResponse and cannot be null");
            }
            this.TokenIn = tokenIn;
            // to ensure "tokenOut" is required (not null)
            if (tokenOut == null)
            {
                throw new ArgumentNullException("tokenOut is a required property for GetQuoteResponse and cannot be null");
            }
            this.TokenOut = tokenOut;
            // to ensure "amountIn" is required (not null)
            if (amountIn == null)
            {
                throw new ArgumentNullException("amountIn is a required property for GetQuoteResponse and cannot be null");
            }
            this.AmountIn = amountIn;
            // to ensure "amountOut" is required (not null)
            if (amountOut == null)
            {
                throw new ArgumentNullException("amountOut is a required property for GetQuoteResponse and cannot be null");
            }
            this.AmountOut = amountOut;
        }

        /// <summary>
        /// Gets or Sets TokenIn
        /// </summary>
        [DataMember(Name = "tokenIn", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public string TokenIn { get; set; }

        /// <summary>
        /// Gets or Sets TokenOut
        /// </summary>
        [DataMember(Name = "tokenOut", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public string TokenOut { get; set; }

        /// <summary>
        /// Gets or Sets AmountIn
        /// </summary>
        [DataMember(Name = "amountIn", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public string AmountIn { get; set; }

        /// <summary>
        /// Gets or Sets AmountOut
        /// </summary>
        [DataMember(Name = "amountOut", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public string AmountOut { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetQuoteResponse {\n");
            sb.Append("  TokenIn: ").Append(TokenIn).Append("\n");
            sb.Append("  TokenOut: ").Append(TokenOut).Append("\n");
            sb.Append("  AmountIn: ").Append(AmountIn).Append("\n");
            sb.Append("  AmountOut: ").Append(AmountOut).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
