/*
 * Player API
 *
 * The Player API is a service to integrate your game with Beam
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using OpenAPIDateConverter = BeamPlayerClient.Client.OpenAPIDateConverter;

namespace BeamPlayerClient.Model
{
    /// <summary>
    /// CreateOperationRequestInputActionsInnerAllOfOneOf5
    /// </summary>
    [DataContract(Name = "CreateOperationRequestInput_actions_inner_allOf_oneOf_5")]
    [UnityEngine.Scripting.Preserve]
    public partial class CreateOperationRequestInputActionsInnerAllOfOneOf5
    {
        /// <summary>
        /// Defines Type
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum MarketplaceListAsset for value: MarketplaceListAsset
            /// </summary>
            [EnumMember(Value = "MarketplaceListAsset")]
            MarketplaceListAsset = 1
        }


        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOperationRequestInputActionsInnerAllOfOneOf5" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        [UnityEngine.Scripting.Preserve]
        protected CreateOperationRequestInputActionsInnerAllOfOneOf5() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateOperationRequestInputActionsInnerAllOfOneOf5" /> class.
        /// </summary>
        /// <param name="type">type (required).</param>
        /// <param name="signature">signature (required).</param>
        [UnityEngine.Scripting.Preserve]
        public CreateOperationRequestInputActionsInnerAllOfOneOf5(TypeEnum type = default(TypeEnum), CreateOperationRequestInputActionsInnerAllOfOneOfSignature signature = default(CreateOperationRequestInputActionsInnerAllOfOneOfSignature))
        {
            this.Type = type;
            // to ensure "signature" is required (not null)
            if (signature == null)
            {
                throw new ArgumentNullException("signature is a required property for CreateOperationRequestInputActionsInnerAllOfOneOf5 and cannot be null");
            }
            this.Signature = signature;
        }

        /// <summary>
        /// Gets or Sets Signature
        /// </summary>
        [DataMember(Name = "signature", IsRequired = true, EmitDefaultValue = true)]
        [UnityEngine.Scripting.Preserve]
        public CreateOperationRequestInputActionsInnerAllOfOneOfSignature Signature { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateOperationRequestInputActionsInnerAllOfOneOf5 {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Signature: ").Append(Signature).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        [UnityEngine.Scripting.Preserve]
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

    }

}
